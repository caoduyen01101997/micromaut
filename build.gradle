plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.4"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("jakarta.persistence:jakarta.persistence-api")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-spock")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation("javax.annotation:javax.annotation-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    implementation("io.projectreactor:reactor-core:3.4.11")
    implementation("io.micronaut.data:micronaut-data-tx") // Add transaction management support
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa") // Hibernate JPA
    implementation("io.micronaut.sql:micronaut-jdbc-hikari") // JDBC connection pooling
    runtimeOnly("org.postgresql:postgresql")
    runtimeOnly("com.h2database:h2")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-inject-java")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-jwt")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    runtimeOnly("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut:micronaut-graal")
    implementation("io.jsonwebtoken:jjwt:0.9.1")
    implementation("jakarta.persistence:jakarta.persistence-api")
    implementation("io.micronaut.data:micronaut-data-tx-hibernate")
        implementation("org.mindrot:jbcrypt:0.4") // BCrypt hashing
}

application {
    mainClass.set("com.example.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java/com/example']
        }
    }
}

graalvmNative.toolchainDetection = false

micronaut {
    version '3.7.4'
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.example.Application'
    }
}
